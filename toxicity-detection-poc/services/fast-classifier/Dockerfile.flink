FROM flink:1.18.1

# Install Python 3.10 specifically
RUN apt-get update -y && \
    apt-get install -y python3 python3-pip python3-dev curl gnupg && \
    apt-get install -y build-essential && \
    rm -rf /var/lib/apt/lists/*

# Ensure python command points to python3
RUN ln -s /usr/bin/python3 /usr/bin/python

# Install Java
RUN apt-get update && \
    apt-get install -y openjdk-11-jdk && \
    apt-get install -y ant && \
    apt-get clean;

# Set JAVA_HOME 
ENV JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64

# Verify JAVA_HOME exists
RUN [ -d "$JAVA_HOME" ] || { echo "JAVA_HOME $JAVA_HOME doesn't exist"; exit 1; }

WORKDIR /opt/flink

# Copy and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Fix numpy issue that might occur with TensorFlow on various Python versions
RUN pip install numpy==1.24.3 --force-reinstall && \
    python3 -c "import numpy; import sys; from pathlib import Path; site_packages = [p for p in sys.path if 'site-packages' in p][0]; numpyPath = Path(site_packages) / 'numpy'; corePath = numpyPath / 'core'; targetPath = numpyPath / '_core'; print(f'Creating symlink from {corePath} to {targetPath}'); targetPath.symlink_to(corePath) if not targetPath.exists() else print('_core already exists')" || echo "Numpy fix not needed or failed"

# Download Java libraries
COPY download_libs.sh .
RUN chmod +x ./download_libs.sh && ./download_libs.sh

# Configure Flink classloader
RUN echo "classloader.resolve-order: parent-first" >> /opt/flink/conf/flink-conf.yaml && \
    echo "classloader.parent-first-patterns.additional: org.apache.flink.streaming.connectors.kafka;org.apache.flink.api.connector" >> /opt/flink/conf/flink-conf.yaml

# Create directories for code/models
RUN mkdir -p /opt/flink/usrlib/models/fast
RUN mkdir -p /opt/flink/usrlib/src

# Environment settings for TensorFlow
ENV TF_CPP_MIN_LOG_LEVEL=2
ENV PYTHONPATH=/opt/flink/lib:/opt/flink/usrlib
ENV PYTHONUNBUFFERED=1

WORKDIR /opt/flink
CMD ["bash"]